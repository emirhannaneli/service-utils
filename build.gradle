plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.9.23'
    id 'maven-publish'
}

group = 'net.lubble'
version = '1.16.17'

var snakeYamlVersion = "2.2"
var auth0JwtVersion = "4.4.0"
var jodaTimeVersion = "2.12.7"
var aspectjVersion = "1.9.22"
var googleApiClientVersion = "2.6.0"
var reactorCoreVersion = "3.6.9"
var jacksonCoreVersion = "2.17.2"
var springBootVersion = "3.3.2"
var jakartaValidationVersion = "3.1.0"
var jakartaPersistenceVersion = "3.1.0"
var commonsLangVersion = "3.16.0"

repositories {
    mavenCentral()
}

dependencies {
    api "org.yaml:snakeyaml:$snakeYamlVersion"
    api "com.auth0:java-jwt:$auth0JwtVersion"
    api "joda-time:joda-time:$jodaTimeVersion"
    api "org.aspectj:aspectjrt:$aspectjVersion"
    api "org.aspectj:aspectjweaver:$aspectjVersion"
    api "com.google.api-client:google-api-client:$googleApiClientVersion"
    compileOnly "io.projectreactor:reactor-core:$reactorCoreVersion"
    compileOnly "com.fasterxml.jackson.core:jackson-core:$jacksonCoreVersion"
    compileOnly "org.springframework.boot:spring-boot-starter-data-mongodb:$springBootVersion"
    compileOnly "org.springframework.data:spring-data-jpa:$springBootVersion"
    compileOnly "org.springframework.boot:spring-boot-starter-security:$springBootVersion"
    compileOnly "org.springframework.boot:spring-boot-starter-graphql:$springBootVersion"
    compileOnly "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
    compileOnly "org.springframework.data:spring-data-commons:$springBootVersion"
    compileOnly "jakarta.validation:jakarta.validation-api:$jakartaValidationVersion"
    compileOnly "jakarta.persistence:jakarta.persistence-api:$jakartaPersistenceVersion"
    compileOnly "org.apache.commons:commons-lang3:$commonsLangVersion"

    implementation "org.jetbrains.kotlin:kotlin-script-runtime:1.9.23"
}

kotlin {
    compilerOptions {
        freeCompilerArgs = ['-Xjsr305=strict', '-Xjvm-default=all']
    }
}

publishing {
    repositories {
        maven {
            name = "Emirman"
            def releasesRepoUrl = "https://repo.emirman.dev/repository/maven-releases/"
            def snapshotsRepoUrl = "https://repo.emirman.dev/repository/maven-snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = System.getenv("REPO_USER") as String
                password = System.getenv("REPO_KEY") as String
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)

            artifact kotlinSourcesJar
        }
    }
}

